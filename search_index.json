[{"path": "graphite_felt", "title": "Conductive Graphite (Carbon) Felt", "content": "Conductive Graphite (Carbon) Felt\nThe Fisher Scientifics carbon felt is commonly used in academic studies. There are other more affordable suppliers on AliExpress and specialty carbon product suppliers in various regions worldwide. The felt needs to be conductive, this technically means it has to have been \"graphitized\" and thermally treated at a sufficiently high temperature, though sometimes it may still be sold as \"carbon felt\" as in the Fisher Scientific product.\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nConductive Graphite Felt\n\n\nThickness\n3.2 mm or 1/8 inch\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nFisher Scientific\nAA43199RY", "breadcrumbs": null}, {"path": "gaskets", "title": "Gasket material", "content": "Gasket material\nThis is used to cut blocking and pass-through gaskets.\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nSilicone\n\n\nThickness\n0.5 mm\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAmazon\nLink", "breadcrumbs": null}, {"path": "pumps", "title": "Diaphragm pumps", "content": "Diaphragm pumps\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nVoltage\n24 V\n\n\nFlowrate\nApprox. 100 to 200 mL/min\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAliExpress\nUse this link\n\n\nAmazon (NL)\nUse this link", "breadcrumbs": null}, {"path": "drivers", "title": "L298N motor driver for pump", "content": "L298N motor driver for pump\nThis is a generic motor driver circuit to drive the pumps, which accept a PWM input and control the individual pump duty cycles.\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nCurrent Rating\nTODO\n\n\nVoltage Rating\n24 V\n\n\nOutputs\n2\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAliExpress\nUse this link\n\n\nAmazon (NL)\nUse this link", "breadcrumbs": null}, {"path": "barbed_fittings", "title": "", "content": "Barbed fittings\nAlso try searching for \"Pagoda fittings\" for other suppliers\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nThread\nM6\n\n\nBarb\nFor 4mm ID flexible tubing\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAliExpress\nUse this link\n\n\nAmazon\nUse this link", "breadcrumbs": null}, {"path": "orings", "title": "O-rings", "content": "O-rings\nUsed to seal barbed fittings on machined cell bodies, alternatively fittings could be heat-welded in place permanently after threading\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nFKM or similar\n\n\nDimensions\n5mm OD, 3 mm ID\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nRS Components\n196-5616", "breadcrumbs": null}, {"path": "conductive_felt", "title": "Conductive Graphite (Carbon) Felt", "content": "Conductive Graphite (Carbon) Felt\nThe Fisher Scientifics carbon felt is commonly used in academic studies. There are other more affordable suppliers on AliExpress and specialty carbon product suppliers in various regions worldwide. The felt needs to be conductive, this technically means it has to have been \"graphitized\" and thermally treated at a sufficiently high temperature, though sometimes it may still be sold as \"carbon felt\" as in the Fisher Scientific product.\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nConductive Graphite Felt\n\n\nThickness\n3.2 mm or 1/8 inch\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nFisher Scientific\nAA43199RY", "breadcrumbs": null}, {"path": "copper", "title": "", "content": "Copper current collectors\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nDimensions\n50 mm x 50 mm x 0.8 mm\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAliExpress\nUse this link", "breadcrumbs": null}, {"path": "separator_sheet", "title": "Separator material", "content": "Separator material\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nMatte Photo Paper\n\n\nWeight\n230 g/m\u00b2\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAmazon\nUse this link", "breadcrumbs": null}, {"path": "tubing", "title": "Tubing", "content": "Tubing\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nMaterial\nPVC or Silicone\n\n\nInner Diameter\n4 mm\n\n\nOuter Diameter\n6 mm", "breadcrumbs": null}, {"path": "grafoil", "title": "", "content": "Grafoil sheet\nGrafoil sheet is compressed graphite commonly used in industry as high-temperature gasket material. It is affordable and similar enough for our purpose here to bipolar plate material, which is much harder to source.\n\n\nSpecifications\n\n\n\nAttribute\nValue\n\n\n\n\nThickness\nTODO\n\n\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nAliExpress\nUse this link\n\n\nRS Components\n268-6953\n\n\nAmazon (NL)\nUse this link", "breadcrumbs": null}, {"path": "pstat", "title": "Potentiostat", "content": "Potentiostat\nThe MYSTAT potentiostat, link is to PCBWay project.\n\nSuppliers\n\n\n\nSupplier\nPart Number\n\n\n\n\nPCBWay\nUse this link", "breadcrumbs": null}, {"path": "index", "title": "Building an Open-Source Hardware Flow Battery Development Kit", "content": "Parts\n\n1 24 V DC power source    - Anything between 12 V and 24 V may work but the results achieved here use 24 V. Motor speeds may need calibration to match existing results\n200 g of 3D printing feedstock \n1 Arduino UNO R3    - or equivalent microcontroller that can output two independent 5V PWM signals and connect to PC over USB serial\n4 barbed fittings \n10 cm\u00b2 of conductive felt \n100 cm\u00b2 of copper sheet \n2 diaphragm pumps \n160 cm\u00b2 of gasket sheet    - Dimensions must be at least enough to cut out approx. four 6 cm x 8 cm rectangles, an A4 sheet is enough\n100 cm\u00b2 of grafoil \n1 L298N motor driver \n4 M6 nuts \n4 M6 x 60 mm hex socket cap bolts \n4 o-rings \nA4 sheet separator sheet \n1 meter of tubing \n\nTools\n\n1 1/8\" drill bit \n1 10 mm socket    - To fit torque wrench\n1 3-axis mill \n1 3D printer \n1 5mm hex key \n1 drill    - A hand drill or rotary tool (with steady hands) works, but a drill press is preferable\n1 pair of chemical safety goggles \n1 pair of nitrile gloves \n1 PC    - Must be able to flash firmware to microcontroller and connect over USB serial to microcontroller and potentiostat\n1 potentiostat \n1 sheet of sandpaper \n1 scale \n1 stir bar \n1 stir plate \n1 torque wrench    - to accept 5 mm allen key or 10 mm hex socket\n2 vial \n1 vinyl cutter machine    - or laser cutter or hand tools\n1 vise \n1 weighing spatula \n\nChemicals\n\n5 grams of deionized water \n5 grams of potassium iodide \n5 grams of zinc chloride \n\n\nThis bill of materials can be found here (, ).\nIf you're starting from scratch, you need to fabricate and source everything needed for testing this flow battery test cell.\nIf you already have all the required components and materials, you can directly prepare the power electronics, assemble the cell, assemble the jig, prepare the electrolyte, and then begin testing.\n\nFabricating cell components\n* Preparing the power electronics\n* Assembling the flow cell from components\n* Assembling the jig with electronics and flow cell\n* Preparing the electrolyte\n* Operating and testing the cell", "breadcrumbs": []}, {"path": "index_BOM", "title": "Bill of Materials", "content": "Bill of Materials\nDownload this as a CSV file\nParts\n\n1 24 V DC power source    - Anything between 12 V and 24 V may work but the results achieved here use 24 V. Motor speeds may need calibration to match existing results\n200 g of 3D printing feedstock \n1 Arduino UNO R3    - or equivalent microcontroller that can output two independent 5V PWM signals and connect to PC over USB serial\n4 barbed fittings \n10 cm\u00b2 of conductive felt \n100 cm\u00b2 of copper sheet \n2 diaphragm pumps \n160 cm\u00b2 of gasket sheet    - Dimensions must be at least enough to cut out approx. four 6 cm x 8 cm rectangles, an A4 sheet is enough\n100 cm\u00b2 of grafoil \n1 L298N motor driver \n4 M6 nuts \n4 M6 x 60 mm hex socket cap bolts \n4 o-rings \nA4 sheet separator sheet \n1 meter of tubing \n\nTools\n\n1 1/8\" drill bit \n1 10 mm socket    - To fit torque wrench\n1 3-axis mill \n1 3D printer \n1 5mm hex key \n1 drill    - A hand drill or rotary tool (with steady hands) works, but a drill press is preferable\n1 pair of chemical safety goggles \n1 pair of nitrile gloves \n1 PC    - Must be able to flash firmware to microcontroller and connect over USB serial to microcontroller and potentiostat\n1 potentiostat \n1 sheet of sandpaper \n1 scale \n1 stir bar \n1 stir plate \n1 torque wrench    - to accept 5 mm allen key or 10 mm hex socket\n2 vial \n1 vinyl cutter machine    - or laser cutter or hand tools\n1 vise \n1 weighing spatula \n\nChemicals\n\n5 grams of deionized water \n5 grams of potassium iodide \n5 grams of zinc chloride", "breadcrumbs": ["index_BOM.md"]}, {"path": "fabrication", "title": "Fabricating cell components", "content": "<!-- There should be only one Header per page. You do not need to use all the keys -->\nFabricating cell components\n{{BUILDUPDETAILS}}\nBill of Materials\n\nParts\n\n200 g of 3D printing feedstock \n10 cm\u00b2 of conductive felt \n100 cm\u00b2 of copper sheet \n160 cm\u00b2 of gasket sheet    - Dimensions must be at least enough to cut out approx. four 6 cm x 8 cm rectangles, an A4 sheet is enough\n100 cm\u00b2 of grafoil \nA4 sheet separator sheet \n1 meter of tubing \n\nTools\n\n1 1/8\" drill bit \n1 3-axis mill \n1 3D printer \n1 drill    - A hand drill or rotary tool (with steady hands) works, but a drill press is preferable\n1 sheet of sandpaper \n1 vinyl cutter machine    - or laser cutter or hand tools\n1 vise \n\n\nFabricate cell bodies\nThese are preferably milled from solid polypropylene with a 3-axis mill\n<embed src=\"exports/Cell Body with Two Flat-Bottom Ports.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600px\" />\nThis makes two <a name=\"output__cell-bodies\"></a>cell bodies\n\nIf you don't have access to a mill \nYou can try to FDM (in polypropylene) or resin print (in epoxy-based resin) this file, with built-in barbs:\n<a href=\"exports/Cell Body with Two Barbed Fittings.stl\"></a>\n<gb3d-viewer src=\"exports/Cell Body with Two Barbed Fittings.stl\"></gb3d-viewer>\n\nStep 1: Print rigid cell components\nUsing a 3D printer loaded with chemically compatible polypropylen filament/epoxy resin 3D printing feedstock, print two reservoirs and two flow frames (links are to .3mf files).\n<noscript><a href=\"exports/Reservoir.stl\"></a></noscript>\n<gb3d-viewer src=\"exports/Reservoir.stl\"></gb3d-viewer>\n<noscript><a href=\"exports/Flow Frame.stl\"></a></noscript>\n<gb3d-viewer src=\"exports/Flow Frame.stl\"></gb3d-viewer>\n\nPrefer conventional machining?\nYou can also fabricate these parts by milling them from a larger sheet of polypropylene\n\nStep 2: Post-process printed parts\n\nRemove brim, raft, support material from print (depending on printing method)\n* Sand down, with fine-grit sandpaper:\n\nThe sealing faces of each cell body\n\n* Both faces of each flow frame\n\n* Secure each cell body and flow frame in a vise and drill out the alignment pin holes to their final diameter with a drill and an 1/8\" drill bit\n\n\n\n\n\n\n\nCaution\nDepending on the dimensional accuracy of your printed parts, you may need to additionally drill out the electrolyte inlet/outlet holes to the correct diameter with an appropriately sized drill bit (these inlet/outlet holes are located immediately on either side of the alignment pin holes)\n\nThis will produce one <a name=\"output__cell-body-with-four-barbed-fittings\"></a>cell body with four barbed fittings, one <a name=\"output__backing-plate\"></a>backing plate and two <a name=\"output__flow-frames\"></a>flow frames.\nStep 3: Cut gaskets\n\nNote:\nCutting the gaskets is most easily done with a vinyl cutter machine, but can also be done manually with a steady hand, utility blade, and appropriately sized punches.\n\n\nUsing a vinyl cutter machine, download the gasket file (as svg, dxf, or pdf) and cut a sheet of gasket material to make the following four gaskets:\n\n<embed src=\"exports/1 sqcm gaskets.pdf\" type=\"application/pdf\" width=\"100%\" height=\"600px\" />\nThis will produce two <a name=\"output__pass-through-gaskets\"></a>pass-through gaskets and two <a name=\"output__blocking-gaskets\"></a>blocking gaskets.\nStep 4: Cut porous carbon electrodes\nTODO\nCut two conductive felt electrodes into 10 mm x 10 mm square from a sheet of conductive feltconductive felt\nStep 5: Cut separator membrane\nTODO\nCut separator sheet into three rectangles\n<a name=\"output__cut-membranes\"></a>cut membranes\nStep 6: Cut grafoil current collectors\nCut grafoil into two 5 cm by 5 cm squares to make <a name=\"output__grafoil-current-collectors\"></a>grafoil current collectors.\nStep 7: Cut copper current collectors\nCut copper sheet into two 5 cm by 5 cm squares to make <a name=\"output__copper-current-collectors\"></a>copper current collectors.\n\nWarning to prevent leakage \nMake sure at least one orientation of the copper squares fits exactly the machined square recess in the cell bodies \n\nCut tubing\nCut tubing into 6 15 centimeter lengths to make <a name=\"output__cut-tubing-pieces\"></a>cut tubing pieces", "breadcrumbs": ["fabrication.md"]}, {"path": "electronics", "title": "Preparing the power electronics", "content": "Preparing the power electronics\nSystem overview\nA PC communicates with both a charging/discharging device (typically a potentiostat) as well as an Arduino UNO R3. These documents assume the use of a MYSTAT potentiostat and it's modified control software.\nThe Arduino is connected to an L298N motor driver, which is powered by a 24 V DC power source. This is a simple dual H-bridge motor driver that allows the Arduino to control the speeds of the peristaltic pumps using pulse width modulation (PWM). There is no speed feedback; we only tell the motors which direction to turn and whether they run at 100% maximum speed, 0% speed (off), or anything in between. To know the speed (in rpm) or flowrate (in mL/min) of the peristaltic pumps, a separate measurement is required (like dispensing water into a graduated cylinder).\nWith this hardware configuration, the MYSTAT software then allows for entire control of this electrochemical system: the applied currents and voltages as well as the speeds of the electrolyte pumps.\n\nParts\n\n1 24 V DC power source    - Anything between 12 V and 24 V may work but the results achieved here use 24 V. Motor speeds may need calibration to match existing results\n1 Arduino UNO R3    - or equivalent microcontroller that can output two independent 5V PWM signals and connect to PC over USB serial\n1 L298N motor driver \n\nTools\n\n1 PC    - Must be able to flash firmware to microcontroller and connect over USB serial to microcontroller and potentiostat\n1 potentiostat \n\n\nStep 1: Flash firmware to microcontroller\nUsing the Arduino IDE with the elapsedMillis library installed, upload the following code to the Arduino. The location of the code in the repository is here\n<pre><code class=\"language-c++\">#include &lt;elapsedMillis.h&gt;\n#define LED_BUILTIN 17\n\n// WHITE WIRES, SPEED CONTROL\n\n#define PIN_1P_PWM 10\n#define PIN_1N_PWM 5\n#define In1 9\n#define In2 8\n#define In3 7\n#define In4 6\n\n// INPUT PUMP SPEED/DUTY CYCLE, 0-255 is 0-100%, PUMPS MINIMUM SPEED STARTS FROM ~3.8 - 7.6 %\nint speed1P = 0;\nint speed1N = 0;\n\n// OUTPUT PUMP SPEED\n\nunsigned long rpm1P = 0;\nunsigned long rpm1N = 0;\n\n//PUMP COUNTERS\n\nunsigned long count1P = 0;\nunsigned long count1N = 0;\n\nconst byte buffSize = 40;\nchar inputBuffer[buffSize];\nconst char startMarker = '&lt;';\nconst char endMarker = '&gt;';\nbyte bytesRecvd = 0;\nboolean readInProgress = false;\nboolean newDataFromPC = false;\nchar messageFromPC[buffSize] = {0};\nchar cmd;\nString val;\n\nconst int updateInterval = 1000; // serial update time period (ms)\nelapsedMillis updateTimer = 0;\n\nbool ledState = LOW;\n\nint set1P = 160;\nint set1N = 160;\n\nvoid parseData()\n{\n  cmd = strtok(inputBuffer, &quot;,&quot;)[0];\n  val = strtok(NULL, &quot;,&quot;);\n  Serial.print(cmd);\n  Serial.print(',');\n  Serial.println(val);\n}\n\nvoid recieveFromPC()\n{\n\n  // receive data from PC and save it into inputBuffer\n\n  if (Serial.available() &gt; 0)\n  {\n\n    char x = Serial.read();\n    // the order of these IF clauses is significant\n\n    if (x == endMarker)\n    {\n      readInProgress = false;\n      newDataFromPC = true;\n      inputBuffer[bytesRecvd] = 0;\n      parseData();\n    }\n\n    if (readInProgress)\n    {\n      inputBuffer[bytesRecvd] = x;\n      bytesRecvd++;\n      if (bytesRecvd == buffSize)\n      {\n        bytesRecvd = buffSize - 1;\n      }\n    }\n\n    if (x == startMarker)\n    {\n      bytesRecvd = 0;\n      readInProgress = true;\n    }\n  }\n}\n\nvoid ISR_1P()\n{\n  count1P++;\n}\nvoid ISR_1N()\n{\n  count1N++;\n}\n\nvoid setup()\n{\n  Serial.begin(9600);\n\n  pinMode(LED_BUILTIN, OUTPUT);\n  digitalWrite(LED_BUILTIN, ledState);\n\n  pinMode(PIN_1P_PWM, OUTPUT);\n  pinMode(PIN_1N_PWM, OUTPUT);\n  pinMode(In1, OUTPUT);\n  pinMode(In2, OUTPUT);\n  pinMode(In3, OUTPUT);\n  pinMode(In4, OUTPUT);\n\n  digitalWrite(In1, HIGH);\n  digitalWrite(In2, LOW);\n\n  digitalWrite(In3, HIGH);\n  digitalWrite(In4, LOW);\n\n  analogWrite(PIN_1P_PWM, set1P);\n  analogWrite(PIN_1N_PWM, set1N);\n}\n\nvoid controlPumps()\n{\n  if (newDataFromPC)\n  {\n    switch (cmd)\n    {\n    case 'a':\n      set1P = val.toInt();\n      analogWrite(PIN_1P_PWM, set1P);\n      break;\n    case 'b':\n      set1N = val.toInt();\n      analogWrite(PIN_1N_PWM, set1N);\n      break;\n    case 'c':\n      set1N = val.toInt();\n      set1P = val.toInt();\n      analogWrite(PIN_1N_PWM\n      , set1N);\n      analogWrite(PIN_1P_PWM, set1P);\n      break;\n    }\n  }\n}\n\nvoid loop()\n{\n  recieveFromPC();\n  controlPumps();\n}\n\n</code></pre>\nStep 2: Remove on-board jumpers from motor driver\nRemove the three on-board jumpers (hig hlighted in pink) from the motor driver board:\n\nStep 3: Connect cables between Arduino, motor driver, and power supply\nConnect according to the below diagram, taking care to connect the negative terminal of the 24 V power supply lead to both the GND terminal of the motor driver (middle connection of the three-terminal screw connection header) and a GND pin of the Arduino, so that the Arduino's signals to the motor driver are in relation to the same fixed GND.\n\nConnect microcontroller to PC\nTODO", "breadcrumbs": ["electronics.md"]}, {"path": "cell_assembly", "title": "Assembling the flow cell from components", "content": "Assembling the flow cell from components\nEnsure you have the following components:\n\nParts\n\n4 barbed fittings \n2 blocking gaskets \n2 cell bodies \n2 copper current collectors \n3 cut membranes \n2 flow frames \n2 grafoil current collectors \n4 M6 nuts \n4 M6 x 60 mm hex socket cap bolts \n4 o-rings \n2 pass-through gaskets \n\nTools\n\n1 10 mm socket    - To fit torque wrench\n1 5mm hex key \n1 torque wrench    - to accept 5 mm allen key or 10 mm hex socket\n\n\nStep 1: Attach the barbed fittings\nTake the two cell bodies and place one o-ring at the bottom of each threaded hole.\nThen insert and carefully hand-thread the barbed fittings to the bottom of the port.\nStep 2: Insert the copper plates\nPlace the two copper current collectors into the square machined recesses of the cell bodies. They should fit very snugly. This aligmnent is crucial to prevent leaks.\nStep 3: Insert the four bolts into one cell body\nTake one cell body and insert the four M6 x 60 mm hex socket cap bolts so that the socket caps are on the same side of the cell as the barbs.\nStep 4: Add the first grafoil current collector\nTake this same cell body and place one grafoil current collector on top of the copper plate.\nStep 5: Add the first pass-through gasket\nPlace one pass-through gasket on top of the assembly, using the bolts to guide the gasket and align it with the fluid holes in the cell body.\nStep 6: Add the first flow frame\nPlace one flow frame on top of the assembly, using the bolts to guide the flow frame and align it with the fluid holes in the gasket.\nStep 7: Add the first blocking gasket\nPlace one blocking gasket on top of the assembly, using the bolts to guide the gasket and align it with the fluid holes in the flow frame.\nStep 8: Add the membranes\nTake the three cut membranes and add them to the assembly.\nStep 9: Add the second blocking gasket\nPlace one blocking gasket on top of the assembly, using the bolts to guide the gasket.\nStep 10: Add the second flow frame\nPlace one flow frame on top of the assembly, using the bolts to guide the flow frame.\nStep 11: Add the second pass-through gasket\nPlace one pass-through gasket on top of the assembly, using the bolts to guide the gasket and align it with the fluid holes in the flow frame.\nStep 12: Add the second grafoil current collector\nPlace one grafoil current collector on top of the pass-through gasket, so that it will align with the copper current collector of the second cell body in the next step.\nStep 13: Add the second cell body\nPlace the second cell body (with barbs and copper plate installed) on top of the assembly and ensure all fluid holes are aligned. Hand-tighten four M6 nuts onto the exposed threads of the bolts in order to lightly compress the cell and hold all the components in place.\nStep 14: Tighten the bolts\nProgressively tighten the bolts to 5 N\u22c5m in a 4-bolt flange pattern using a torque wrench fitted with a 10 mm socket and a 5mm hex key\n\nNow you have an <a name=\"output__assembled-flow-cell\"></a>assembled flow cell!", "breadcrumbs": ["cell_assembly.md"]}, {"path": "jig_assembly", "title": "Assembling the jig with electronics and flow cell", "content": "Assembling the jig with electronics and flow cell\nEnsure you have the following components:\n\nParts\n\n0 Arduino UNO R3 \n1 assembled flow cell \n6 cut tubing pieces \n2 diaphragm pumps \n\n\nStep 1: Add pumps to jig\nInsert the two diaphragm pumps into their holders in the jig\nStep 2: Add electronics to jig\nPlace the one Arduino UNO R3 with firmware\nTake the assembled flow cell\nsix cut tubing pieces", "breadcrumbs": ["jig_assembly.md"]}, {"path": "electrolyte", "title": "Preparing the electrolyte", "content": "Preparing the electrolyte\nZinc-Iodide chemistry\n\nTools\n\n1 pair of chemical safety goggles \n1 pair of nitrile gloves \n1 scale \n1 stir bar \n1 stir plate \n2 vial \n1 weighing spatula \n\nChemicals\n\n5 grams of deionized water \n5 grams of potassium iodide \n5 grams of zinc chloride \n\n\nzinc chloride\npotassium iodide\ndeionized water\nvial\nstir bar\nstir plate\npair of chemical safety goggles\npair of nitrile gloves\nscale\nweighing spatula", "breadcrumbs": ["electrolyte.md"]}, {"path": "testing", "title": "Operating and testing the cell", "content": "Operating and testing the cell\nTODO", "breadcrumbs": ["testing.md"]}, {"path": "exports/Cell Body with Two Barbed Fittings", "title": "Cell Body with Two Barbed Fittings", "content": "Cell Body with Two Barbed Fittings\n<noscript><a href=\"Cell Body with Two Barbed Fittings.stl\">Download</a></noscript>\n<gb3d-viewer src=\"Cell Body with Two Barbed Fittings.stl\"></gb3d-viewer>", "breadcrumbs": null}, {"path": "exports/Reservoir", "title": "Reservoir", "content": "Reservoir\n<noscript><a href=\"Reservoir.stl\">Download</a></noscript>\n<gb3d-viewer src=\"Reservoir.stl\"></gb3d-viewer>", "breadcrumbs": null}, {"path": "exports/Flow Frame", "title": "Flow Frame", "content": "Flow Frame\n<noscript><a href=\"Flow Frame.stl\">Download</a></noscript>\n<gb3d-viewer src=\"Flow Frame.stl\"></gb3d-viewer>", "breadcrumbs": null}]